#! /bin/sh

### BEGIN INIT INFO
# Provides:          ally-py
# Required-Start:    $remote_fs $syslog $network
# Required-Stop:     $remote_fs $syslog $network
# Should-Start:
# Should-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: ally-py
# Description:       ally-py
### END INIT INFO

. /var/opt/instances/scripts/functions
[ "$root" = "" ] && exit 1

python_start=$scripts/python_start.sh

if [ "$2" = "" ]; then
    instances=`ls $start_folder`
else
    if [ -f $start_folder/$2 ]; then
        instances=$2
    else
	instances=`cd $start_folder && grep "domain=$2" * -l`
    fi
fi

if [ "$instances" = "" ]; then echo "ERROR: instance $2 is not found" && exit 1; fi

case "$1" in
  start)
	for i in $instances; do
	    . $start_folder/$i
	    echo "Starting instance: $domain"
	    daemon -n instance$i -r -A 5 -L 60 -X "$python_start $instances_root/${container}/distribution/application.py"
	    daemon -n instance${i}_1 -r -A 5 -L 60 -X "$python_start $instances_root/${container}/distribution/application.py --ccfg application.properties.additional"
	    daemon -n instance${i}_2 -r -A 5 -L 60 -X "$python_start $instances_root/${container}/distribution/application.py --ccfg application.properties.additional"
	done
	;;
  stop)
	for i in $instances; do
	    daemon -n instance$i --stop
	    daemon -n instance${i}_1 --stop
	    daemon -n instance${i}_2 --stop
	done
	;;
  restart)
	/etc/init.d/ally-py stop $2
	/etc/init.d/ally-py start $2
	;;
  reload)
	echo "Error: argument '$1' not supported" >&2
	exit 3
	;;
  *)
	echo "Usage: $0 start|stop|restart [instance_number|instance_domain]" >&2
	exit 3
	;;
esac

exit 0
